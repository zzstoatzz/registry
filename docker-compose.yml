services:
  registry:
    image: registry
    container_name: registry
    build:
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    # See .env.example for more documentation
    environment:
      - MCP_REGISTRY_DATABASE_URL=${MCP_REGISTRY_DATABASE_URL:-postgres://mcpregistry:mcpregistry@postgres:5432/mcp-registry}
      - MCP_REGISTRY_ENVIRONMENT=${MCP_REGISTRY_ENVIRONMENT:-test}
      - MCP_REGISTRY_GITHUB_CLIENT_ID=${MCP_REGISTRY_GITHUB_CLIENT_ID:-Iv23licy3GSiM9Km5jtd}
      - MCP_REGISTRY_GITHUB_CLIENT_SECRET=${MCP_REGISTRY_GITHUB_CLIENT_SECRET:-0e8db54879b02c29adef51795586f3c510a9341d}
      - MCP_REGISTRY_JWT_PRIVATE_KEY=${MCP_REGISTRY_JWT_PRIVATE_KEY:-8103179d8ef955f6d3de6d6217224a909ec4060529dfeb1d4ca5a994537658cd}
      - MCP_REGISTRY_ENABLE_ANONYMOUS_AUTH=${MCP_REGISTRY_ENABLE_ANONYMOUS_AUTH:-true}
      - MCP_REGISTRY_SEED_FROM=${MCP_REGISTRY_SEED_FROM:-data/seed.json}
    ports:
      - 8080:8080
    restart: "unless-stopped"

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: mcp-registry
      POSTGRES_USER: mcpregistry
      POSTGRES_PASSWORD: mcpregistry
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - './.db:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcpregistry -d mcp-registry"]
      interval: 1s
      retries: 30
    ports:
      - "5432:5432"
    restart: "unless-stopped"
